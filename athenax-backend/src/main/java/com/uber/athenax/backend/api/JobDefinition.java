/*
 * AthenaX REST API
 * AthenaX REST API
 *
 * OpenAPI spec version: 0.1
 * Contact: haohui@uber.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.uber.athenax.backend.api;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.uber.athenax.backend.api.JobDefinitionDesiredstate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * JobDefinition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-08-21T21:38:44.857+08:00")
public class JobDefinition   {
  @JsonProperty("query")
  private String query = null;

  @JsonProperty("outputs")
  private List<String> outputs = null;

  @JsonProperty("tag")
  private Object tag = null;

  @JsonProperty("desired-state")
  private List<JobDefinitionDesiredstate> desiredState = null;

  public JobDefinition query(String query) {
    this.query = query;
    return this;
  }

  /**
   * The query to be run
   * @return query
   **/
  @JsonProperty("query")
  @ApiModelProperty(value = "The query to be run")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public JobDefinition outputs(List<String> outputs) {
    this.outputs = outputs;
    return this;
  }

  public JobDefinition addOutputsItem(String outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<String>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

  /**
   * The tables where the outputs will be pushed to. The values can be customized
   * @return outputs
   **/
  @JsonProperty("outputs")
  @ApiModelProperty(value = "The tables where the outputs will be pushed to. The values can be customized")
  public List<String> getOutputs() {
    return outputs;
  }

  public void setOutputs(List<String> outputs) {
    this.outputs = outputs;
  }

  public JobDefinition tag(Object tag) {
    this.tag = tag;
    return this;
  }

  /**
   * customized information about the job (e.g., name)
   * @return tag
   **/
  @JsonProperty("tag")
  @ApiModelProperty(value = "customized information about the job (e.g., name)")
  public Object getTag() {
    return tag;
  }

  public void setTag(Object tag) {
    this.tag = tag;
  }

  public JobDefinition desiredState(List<JobDefinitionDesiredstate> desiredState) {
    this.desiredState = desiredState;
    return this;
  }

  public JobDefinition addDesiredStateItem(JobDefinitionDesiredstate desiredStateItem) {
    if (this.desiredState == null) {
      this.desiredState = new ArrayList<JobDefinitionDesiredstate>();
    }
    this.desiredState.add(desiredStateItem);
    return this;
  }

  /**
   * Get desiredState
   * @return desiredState
   **/
  @JsonProperty("desired-state")
  @ApiModelProperty(value = "")
  public List<JobDefinitionDesiredstate> getDesiredState() {
    return desiredState;
  }

  public void setDesiredState(List<JobDefinitionDesiredstate> desiredState) {
    this.desiredState = desiredState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDefinition jobDefinition = (JobDefinition) o;
    return Objects.equals(this.query, jobDefinition.query) &&
        Objects.equals(this.outputs, jobDefinition.outputs) &&
        Objects.equals(this.tag, jobDefinition.tag) &&
        Objects.equals(this.desiredState, jobDefinition.desiredState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, outputs, tag, desiredState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDefinition {\n");
    
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    desiredState: ").append(toIndentedString(desiredState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

