/*
 * AthenaX REST API
 * AthenaX REST API
 *
 * OpenAPI spec version: 0.1
 * Contact: haohui@uber.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.uber.athenax.backend.api;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * The resources the application master requires
 */
@ApiModel(description = "The resources the application master requires")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-08-21T21:38:44.857+08:00")
public class JobDefinitionResource   {
  @JsonProperty("queue")
  private String queue = null;

  @JsonProperty("memory")
  private Long memory = null;

  @JsonProperty("vCores")
  private Long vCores = null;

  @JsonProperty("executionSlots")
  private Long executionSlots = null;

  public JobDefinitionResource queue(String queue) {
    this.queue = queue;
    return this;
  }

  /**
   * The name of the queue to which the application should be submitted
   * @return queue
   **/
  @JsonProperty("queue")
  @ApiModelProperty(value = "The name of the queue to which the application should be submitted")
  public String getQueue() {
    return queue;
  }

  public void setQueue(String queue) {
    this.queue = queue;
  }

  public JobDefinitionResource memory(Long memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Memory required for each container
   * @return memory
   **/
  @JsonProperty("memory")
  @ApiModelProperty(value = "Memory required for each container")
  public Long getMemory() {
    return memory;
  }

  public void setMemory(Long memory) {
    this.memory = memory;
  }

  public JobDefinitionResource vCores(Long vCores) {
    this.vCores = vCores;
    return this;
  }

  /**
   * Virtual cores for each container
   * @return vCores
   **/
  @JsonProperty("vCores")
  @ApiModelProperty(value = "Virtual cores for each container")
  public Long getVCores() {
    return vCores;
  }

  public void setVCores(Long vCores) {
    this.vCores = vCores;
  }

  public JobDefinitionResource executionSlots(Long executionSlots) {
    this.executionSlots = executionSlots;
    return this;
  }

  /**
   * Execution slots per virtual cores for each container
   * @return executionSlots
   **/
  @JsonProperty("executionSlots")
  @ApiModelProperty(value = "Execution slots per virtual cores for each container")
  public Long getExecutionSlots() {
    return executionSlots;
  }

  public void setExecutionSlots(Long executionSlots) {
    this.executionSlots = executionSlots;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDefinitionResource jobDefinitionResource = (JobDefinitionResource) o;
    return Objects.equals(this.queue, jobDefinitionResource.queue) &&
        Objects.equals(this.memory, jobDefinitionResource.memory) &&
        Objects.equals(this.vCores, jobDefinitionResource.vCores) &&
        Objects.equals(this.executionSlots, jobDefinitionResource.executionSlots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queue, memory, vCores, executionSlots);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDefinitionResource {\n");
    
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    vCores: ").append(toIndentedString(vCores)).append("\n");
    sb.append("    executionSlots: ").append(toIndentedString(executionSlots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

