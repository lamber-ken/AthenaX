/*
 * AthenaX REST API
 * AthenaX REST API
 *
 * OpenAPI spec version: 0.1
 * Contact: haohui@uber.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.uber.athenax.backend.api;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * InstanceStatus
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-08-21T21:38:44.857+08:00")
public class InstanceStatus   {
  /**
   * State of the application
   */
  public enum StateEnum {
    NEW("NEW"),
    
    NEW_SAVING("NEW_SAVING"),
    
    SUBMITTED("SUBMITTED"),
    
    ACCEPTED("ACCEPTED"),
    
    RUNNING("RUNNING"),
    
    FINISHED("FINISHED"),
    
    FAILED("FAILED"),
    
    KILLED("KILLED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("clusterId")
  private String clusterId = null;

  @JsonProperty("applicationId")
  private String applicationId = null;

  @JsonProperty("startedTime")
  private Long startedTime = null;

  @JsonProperty("allocatedMB")
  private Long allocatedMB = null;

  @JsonProperty("allocatedVCores")
  private Long allocatedVCores = null;

  @JsonProperty("runningContainers")
  private Long runningContainers = null;

  @JsonProperty("trackingUrl")
  private String trackingUrl = null;

  public InstanceStatus state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * State of the application
   * @return state
   **/
  @JsonProperty("state")
  @ApiModelProperty(value = "State of the application")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public InstanceStatus clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * The cluster that the application is run on
   * @return clusterId
   **/
  @JsonProperty("clusterId")
  @ApiModelProperty(value = "The cluster that the application is run on")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public InstanceStatus applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * The YARN application ID of the instance
   * @return applicationId
   **/
  @JsonProperty("applicationId")
  @ApiModelProperty(value = "The YARN application ID of the instance")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public InstanceStatus startedTime(Long startedTime) {
    this.startedTime = startedTime;
    return this;
  }

  /**
   * The time in which the application started
   * @return startedTime
   **/
  @JsonProperty("startedTime")
  @ApiModelProperty(value = "The time in which the application started")
  public Long getStartedTime() {
    return startedTime;
  }

  public void setStartedTime(Long startedTime) {
    this.startedTime = startedTime;
  }

  public InstanceStatus allocatedMB(Long allocatedMB) {
    this.allocatedMB = allocatedMB;
    return this;
  }

  /**
   * The sum of memory in MB allocated to the application&#39;s running containers
   * @return allocatedMB
   **/
  @JsonProperty("allocatedMB")
  @ApiModelProperty(value = "The sum of memory in MB allocated to the application's running containers")
  public Long getAllocatedMB() {
    return allocatedMB;
  }

  public void setAllocatedMB(Long allocatedMB) {
    this.allocatedMB = allocatedMB;
  }

  public InstanceStatus allocatedVCores(Long allocatedVCores) {
    this.allocatedVCores = allocatedVCores;
    return this;
  }

  /**
   * The sum of virtual cores allocated to the application&#39;s running containers
   * @return allocatedVCores
   **/
  @JsonProperty("allocatedVCores")
  @ApiModelProperty(value = "The sum of virtual cores allocated to the application's running containers")
  public Long getAllocatedVCores() {
    return allocatedVCores;
  }

  public void setAllocatedVCores(Long allocatedVCores) {
    this.allocatedVCores = allocatedVCores;
  }

  public InstanceStatus runningContainers(Long runningContainers) {
    this.runningContainers = runningContainers;
    return this;
  }

  /**
   * The number of containers currently running for the application
   * @return runningContainers
   **/
  @JsonProperty("runningContainers")
  @ApiModelProperty(value = "The number of containers currently running for the application")
  public Long getRunningContainers() {
    return runningContainers;
  }

  public void setRunningContainers(Long runningContainers) {
    this.runningContainers = runningContainers;
  }

  public InstanceStatus trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * The web URL that can be used to track the application
   * @return trackingUrl
   **/
  @JsonProperty("trackingUrl")
  @ApiModelProperty(value = "The web URL that can be used to track the application")
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceStatus instanceStatus = (InstanceStatus) o;
    return Objects.equals(this.state, instanceStatus.state) &&
        Objects.equals(this.clusterId, instanceStatus.clusterId) &&
        Objects.equals(this.applicationId, instanceStatus.applicationId) &&
        Objects.equals(this.startedTime, instanceStatus.startedTime) &&
        Objects.equals(this.allocatedMB, instanceStatus.allocatedMB) &&
        Objects.equals(this.allocatedVCores, instanceStatus.allocatedVCores) &&
        Objects.equals(this.runningContainers, instanceStatus.runningContainers) &&
        Objects.equals(this.trackingUrl, instanceStatus.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, clusterId, applicationId, startedTime, allocatedMB, allocatedVCores, runningContainers, trackingUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceStatus {\n");
    
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    startedTime: ").append(toIndentedString(startedTime)).append("\n");
    sb.append("    allocatedMB: ").append(toIndentedString(allocatedMB)).append("\n");
    sb.append("    allocatedVCores: ").append(toIndentedString(allocatedVCores)).append("\n");
    sb.append("    runningContainers: ").append(toIndentedString(runningContainers)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

